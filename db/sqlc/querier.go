// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package db

import (
	"context"
	"database/sql"
)

type Querier interface {
	DeleteAuthor(ctx context.Context, name string) error
	DeleteGenre(ctx context.Context, name string) error
	DeletePublisher(ctx context.Context, name string) error
	GetAllAuthors(ctx context.Context) ([]Author, error)
	GetAllGenres(ctx context.Context) ([]Genre, error)
	GetAllPublishers(ctx context.Context) ([]Publisher, error)
	GetAuthorByName(ctx context.Context, name string) (Author, error)
	GetBooksByGenreName(ctx context.Context, genreName string) ([]int64, error)
	GetGenreByName(ctx context.Context, name string) (Genre, error)
	GetGenresByBookID(ctx context.Context, bookID int64) ([]string, error)
	GetPublisherByName(ctx context.Context, name string) (Publisher, error)
	GetReadingHistoryByUserAndBook(ctx context.Context, arg GetReadingHistoryByUserAndBookParams) (ReadingHistory, error)
	GetReadingHistoryByUserAndStatus(ctx context.Context, arg GetReadingHistoryByUserAndStatusParams) ([]ReadingHistory, error)
	GetReadingHistoryByUserID(ctx context.Context, userID int64) ([]ReadingHistory, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserById(ctx context.Context, id int64) (User, error)
	InsertAuthor(ctx context.Context, name string) (Author, error)
	InsertBook(ctx context.Context, arg InsertBookParams) (Book, error)
	InsertBookGenre(ctx context.Context, arg InsertBookGenreParams) error
	InsertGenre(ctx context.Context, name string) (Genre, error)
	InsertPublisher(ctx context.Context, name string) (Publisher, error)
	InsertReadingHistory(ctx context.Context, arg InsertReadingHistoryParams) error
	InsertUser(ctx context.Context, arg InsertUserParams) (User, error)
	ListAuthors(ctx context.Context, arg ListAuthorsParams) ([]Author, error)
	ListBooksByAuthorName(ctx context.Context, authorName string) ([]Book, error)
	ListBooksByIsbn(ctx context.Context, isbn sql.NullString) ([]Book, error)
	ListBooksByTitle(ctx context.Context, title sql.NullString) ([]Book, error)
	ListPublishers(ctx context.Context, arg ListPublishersParams) ([]Publisher, error)
	ListUsers(ctx context.Context, arg ListUsersParams) ([]User, error)
	UpdateBook(ctx context.Context, arg UpdateBookParams) (Book, error)
	UpdateGenreForBook(ctx context.Context, arg UpdateGenreForBookParams) error
	UpdateReadingDates(ctx context.Context, arg UpdateReadingDatesParams) error
	UpdateReadingStatus(ctx context.Context, arg UpdateReadingStatusParams) error
	UpdateUser(ctx context.Context, arg UpdateUserParams) (User, error)
}

var _ Querier = (*Queries)(nil)
